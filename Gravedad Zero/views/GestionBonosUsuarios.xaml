<UserControl
    x:Class="Gravedad_Zero.views.GestionBonosUsuarios"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Gravedad_Zero.views"
    mc:Ignorable="d"
    d:DesignHeight="550"
    d:DesignWidth="1100"
    Background="#FFFFFFCF">

    <UserControl.Resources>

        <Style
            TargetType="Border"
            x:Key="BorderActualiar">
            <Setter
                Property="Width"
                Value="360"></Setter>
            <Setter
                Property="Height"
                Value="440"></Setter>
            <Setter
                Property="Background"
                Value="#FFFFFFCF"></Setter>
            <Setter
                Property="BorderBrush"
                Value="#FFFF8000"></Setter>
            <Setter
                Property="BorderThickness"
                Value="2"></Setter>
            <Setter
                Property="Margin"
                Value="10"></Setter>
            <Setter
                Property="CornerRadius"
                Value="10"></Setter>
            <Setter
                Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        Opacity="0.5">
                    </DropShadowEffect>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
            TargetType="{x:Type Button}">
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle
                                x:Name="Border"
                                Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                SnapsToDevicePixels="True" />
                            <Polygon
                                x:Name="Arrow"
                                Fill="Black"
                                HorizontalAlignment="Right"
                                Margin="8,8,3,3"
                                Opacity="0.15"
                                Points="0,10 10,10 10,0"
                                Stretch="Uniform"
                                VerticalAlignment="Bottom" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger
                                Property="IsMouseOver"
                                Value="True">
                                <Setter
                                    Property="Stroke"
                                    TargetName="Border"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            </Trigger>
                            <Trigger
                                Property="IsPressed"
                                Value="True">
                                <Setter
                                    Property="Fill"
                                    TargetName="Border"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                            </Trigger>
                            <Trigger
                                Property="IsEnabled"
                                Value="False">
                                <Setter
                                    Property="Visibility"
                                    TargetName="Arrow"
                                    Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="DataGridStyle1"
            TargetType="{x:Type DataGrid}">
            <Setter
                Property="Background"
                Value="#FFFFFFCF"></Setter>
            <Setter
                Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter
                Property="BorderBrush"
                Value="#FF688CAF" />
            <Setter
                Property="BorderThickness"
                Value="1" />
            <Setter
                Property="RowDetailsVisibilityMode"
                Value="VisibleWhenSelected" />
            <Setter
                Property="ScrollViewer.CanContentScroll"
                Value="true" />
            <Setter
                Property="ScrollViewer.PanningMode"
                Value="Both" />
            <Setter
                Property="Stylus.IsFlicksEnabled"
                Value="False" />
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type DataGrid}">
                        <Border
                            CornerRadius="3,3,3,3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="DG_ScrollViewer"
                                Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate
                                        TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition
                                                    Width="Auto" />
                                                <ColumnDefinition
                                                    Width="*" />
                                                <ColumnDefinition
                                                    Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition
                                                    Height="Auto" />
                                                <RowDefinition
                                                    Height="*" />
                                                <RowDefinition
                                                    Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <DataGridColumnHeadersPresenter
                                                x:Name="PART_ColumnHeadersPresenter"
                                                Grid.Column="1"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter
                                                x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                Grid.ColumnSpan="2"
                                                Grid.Row="1" />
                                            <ScrollBar
                                                x:Name="PART_VerticalScrollBar"
                                                Grid.Column="2"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                Orientation="Vertical"
                                                Grid.Row="1"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                ViewportSize="{TemplateBinding ViewportHeight}" />
                                            <Grid
                                                Grid.Column="1"
                                                Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition
                                                        Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition
                                                        Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar
                                                    x:Name="PART_HorizontalScrollBar"
                                                    Grid.Column="1"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Orientation="Horizontal"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                    ViewportSize="{TemplateBinding ViewportWidth}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition
                            Property="IsGrouping"
                            Value="true" />
                        <Condition
                            Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                            Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter
                        Property="ScrollViewer.CanContentScroll"
                        Value="false" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style
            TargetType="Label">
            <Setter
                Property="Margin"
                Value="5"></Setter>
            <Setter
                Property="Foreground"
                Value="#FFFF8000"></Setter>
            <Setter
                Property="FontWeight"
                Value="Bold"></Setter>
            <Setter
                Property="FontFamily"
                Value="Miriam Libre"></Setter>
            <Setter
                Property="FontSize"
                Value="12"></Setter>
        </Style>
        
        <ControlTemplate
            x:Key="ButtonControlTemplate"
            TargetType="{x:Type Button}">
            <Border
                x:Name="border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True"
                CornerRadius="3">
                <ContentPresenter
                    x:Name="contentPresenter"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Content="{TemplateBinding Content}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    Focusable="False"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Margin="{TemplateBinding Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger
                    Property="IsDefaulted"
                    Value="True">
                    <Setter
                        Property="BorderBrush"
                        TargetName="border"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger
                    Property="IsMouseOver"
                    Value="True">
                    <Setter
                        Property="Background"
                        TargetName="border"
                        Value="#FFBF7F" />
                    <Setter
                        Property="BorderBrush"
                        TargetName="border"
                        Value="#FF3C7FB1" />
                </Trigger>
                <Trigger
                    Property="IsPressed"
                    Value="True">
                    <Setter
                        Property="Background"
                        TargetName="border"
                        Value="#FFC4E5F6" />
                    <Setter
                        Property="BorderBrush"
                        TargetName="border"
                        Value="#FF2C628B" />
                </Trigger>
                <Trigger
                    Property="ToggleButton.IsChecked"
                    Value="True">
                    <Setter
                        Property="Background"
                        TargetName="border"
                        Value="#FFBCDDEE" />
                    <Setter
                        Property="BorderBrush"
                        TargetName="border"
                        Value="#FF245A83" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style
            TargetType="Button"
            x:Key="ButtonSubir">
            <Setter
                Property="Width"
                Value="125"></Setter>
            <Setter
                Property="Height"
                Value="40"></Setter>
            <Setter
                Property="Margin"
                Value="40,80,40,40"></Setter>
            <Setter
                Property="Background"
                Value="#FFFF8000"></Setter>
            <Setter
                Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        Opacity="0.5">
                    </DropShadowEffect>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            TargetType="Button"
            x:Key="ButtonBonos">
            <Setter
                Property="Width"
                Value="30"></Setter>
            <Setter
                Property="Height"
                Value="30"></Setter>
            <Setter
                Property="Margin"
                Value="10,0,10,0"></Setter>
            <Setter
                Property="Background"
                Value="#FFFF8000"></Setter>
            <Setter
                Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        Opacity="0.1">
                    </DropShadowEffect>
                </Setter.Value>
            </Setter>
        </Style>


        <Style
            TargetType="TextBlock"
            x:Key="Boton">
            <Setter
                Property="Foreground"
                Value="#FFFFE7"></Setter>
            <Setter
                Property="FontWeight"
                Value="Bold"></Setter>
            <Setter
                Property="FontFamily"
                Value="Miriam Libre"></Setter>
            <Setter
                Property="FontSize"
                Value="20"></Setter>
        </Style>
        
        <ControlTemplate
            x:Key="TextBoxControlTemplate"
            TargetType="{x:Type TextBox}">
            <Border
                x:Name="border"
                BorderBrush="#FFFF8000"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="#FFFFE7"
                SnapsToDevicePixels="True"
                CornerRadius="3"
                Padding="4"
                ClipToBounds="True">
                <ScrollViewer
                    x:Name="PART_ContentHost"
                    Focusable="False"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger
                    Property="IsFocused"
                    Value="True">
                    <Setter
                        Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect
                                BlurRadius="10"
                                ShadowDepth="0"
                                Color="DeepSkyBlue">
                            </DropShadowEffect>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger
                    Property="IsEnabled"
                    Value="False">
                    <Setter
                        Property="Opacity"
                        TargetName="border"
                        Value="0.56" />
                </Trigger>
                <Trigger
                    Property="IsMouseOver"
                    Value="True">
                    <Setter
                        Property="BorderBrush"
                        TargetName="border"
                        Value="#FF7EB4EA" />
                </Trigger>
                <Trigger
                    Property="IsKeyboardFocused"
                    Value="True">
                    <Setter
                        Property="BorderBrush"
                        TargetName="border"
                        Value="#FF569DE5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
       

    </UserControl.Resources>


    <DockPanel>
        <DataGrid
            DockPanel.Dock="Left"
            Margin="10"
            Style="{DynamicResource DataGridStyle1}"
            Width="650"
            SelectionChanged="DataGrid_SelectionChanged">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Header="Email"
                    Binding="{Binding Email}" />
                <DataGridTextColumn
                    Header="Nick"
                    Binding="{Binding Nick}" />
                <DataGridTextColumn
                    Header="Bonos"
                    Binding="{Binding Bonos}" />
            </DataGrid.Columns>
        </DataGrid>
        <Border
            Style="{StaticResource BorderActualiar}">
            <StackPanel
                Margin="15">
                <Label>Email</Label>
                <TextBox
                    HorizontalContentAlignment="Center"
                    IsReadOnly="True"
                    Template="{DynamicResource TextBoxControlTemplate}">gravedadzero@gmail.com</TextBox>
                <Label>Nick</Label>
                <TextBox
                    HorizontalContentAlignment="Center"
                    IsReadOnly="True"
                    Template="{DynamicResource TextBoxControlTemplate}">admin</TextBox>
                <Label>Bonos</Label>
                <StackPanel
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <Button 
                        Template="{DynamicResource ButtonControlTemplate}"
                        Style="{StaticResource ButtonBonos}">
                        <TextBlock
                            x:Name="SumarBonos"
                            Style="{StaticResource Boton}"
                            Text="+">
                        </TextBlock>
                    </Button>
                    <TextBox
                        HorizontalContentAlignment="Center"
                        Width="50"
                        Template="{DynamicResource TextBoxControlTemplate}"
                        Text="8"></TextBox>
                    <Button
                        Template="{DynamicResource ButtonControlTemplate}"
                        Style="{StaticResource ButtonBonos}">
                        <TextBlock
                            x:Name="RestarBonos"
                            Style="{StaticResource Boton}"
                            Text="-">
                        </TextBlock>
                    </Button>
                </StackPanel>
                <Button
                    Command="{Binding Path=Gestion}"
                    Template="{DynamicResource ButtonControlTemplate}"
                    Style="{StaticResource ButtonSubir}">
                    <TextBlock
                        x:Name="Actualizar"
                        Style="{StaticResource Boton}"
                        Text="Actualizar">
                    </TextBlock>
                </Button>
            </StackPanel>
        </Border> 
        
    </DockPanel>
</UserControl>
